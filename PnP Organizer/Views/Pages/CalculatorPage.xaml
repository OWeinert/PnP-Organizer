<ui:UiPage
    x:Class="PnP_Organizer.Views.Pages.CalculatorPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:PnP_Organizer.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:PnP_Organizer.Models"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:p="clr-namespace:PnP_Organizer.Properties"
    Title="DataPage"
    d:DataContext="{d:DesignInstance local:CalculatorPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Grid Margin="24,0,0,0">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="1"
                    Grid.RowSpan="2"
                    Orientation="Horizontal">
            <Separator Margin="0,0,0,8"/>
        </StackPanel>

        <StackPanel Grid.Row="0"
                    Grid.Column="0">

            <Label Content="{x:Static p:Resources.Calculator_AttackMode}"
                   FontSize="16"
                   Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                   Margin="1,0,0,0"/>
            <Border Background="{DynamicResource ControlFillColorDefaultBrush}"
                    HorizontalAlignment="Left"
                    CornerRadius="4"
                    Padding="0">
                <StackPanel Orientation="Horizontal"
                        Margin="20,2,0,2">
                    <RadioButton Content="{x:Static p:Resources.Calculator_Melee}"
                             IsChecked="{Binding ViewModel.IsMelee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <RadioButton Content="{x:Static p:Resources.Calculator_Ranged}"
                             IsChecked="{Binding ViewModel.IsRanged, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </Border>

            <Label Content="{x:Static p:Resources.Calculator_BaseDamage}"
                   FontSize="16"
                   Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                   Margin="0,12,0,0"/>

            <Border Background="{DynamicResource ControlFillColorDefaultBrush}"
                    HorizontalAlignment="Left"
                    CornerRadius="4"
                    Padding="0">
                <StackPanel Orientation="Horizontal">
                    <ui:NumberBox x:Name="RollCountNumBox"
                                  ClearButtonEnabled="False"
                                  FontSize="16"
                                  BorderThickness="0"
                                  IntegersOnly="True"
                                  Value="{Binding ViewModel.RollCount, Mode=OneWayToSource}"
                                  DecimalPlaces="1"
                                  Step="1"
                                  Min="1"
                                  Max="100"
                                  Width="54"
                                  SpinButtonsEnabled="False"
                                  MouseWheel="NumBox_MouseWheel"/>
                    <Label Content="D"
                           FontSize="16"
                           VerticalAlignment="Center"
                           Margin="4,0,4,-4"
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                    <Grid>
                        <Border x:Name="AccentBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderThickness="0,0,0,1"
                                CornerRadius="4">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ControlStrongStrokeColorDefault}" />
                            </Border.BorderBrush>
                        </Border>

                        <ComboBox ItemsSource="{Binding ViewModel.Dices, Mode=TwoWay}"
                                  DisplayMemberPath="Name"
                                  FontSize="16"
                                  BorderThickness="0"
                                  SelectedIndex="3"
                                  SelectedItem="{Binding ViewModel.SelectedDice, Mode=TwoWay}"/>
                    </Grid>
                    <Label Content="+"
                           FontSize="16"
                           VerticalAlignment="Center"
                           Margin="4,0,4,-4"
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                    <ui:NumberBox x:Name="RollDamageBonusNumBox"
                                  ClearButtonEnabled="False"
                                  FontSize="16"
                                  BorderThickness="0"
                                  Value="{Binding ViewModel.RollDamageBonus, Mode=OneWayToSource}"
                                  IntegersOnly="True"
                                  DecimalPlaces="1"
                                  Step="1"
                                  Min="0"
                                  Max="100"
                                  Width="54"
                                  SpinButtonsEnabled="False"
                                  MouseWheel="NumBox_MouseWheel"/>
                </StackPanel>
            </Border>

            <Label Content="{x:Static p:Resources.Calculator_BaseDamageMultiplier}"
                   FontSize="16"
                   Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                   Margin="0,12,0,0"/>
            <Border Background="{DynamicResource ControlFillColorDefaultBrush}"
                    HorizontalAlignment="Left"
                    CornerRadius="4"
                    Padding="0">
                <ui:NumberBox x:Name="BaseDamageMultNumBox"
                              ClearButtonEnabled="False"
                              FontSize="16"
                              BorderThickness="0"
                              Value="{Binding ViewModel.BaseDamageMult, Mode=OneWayToSource}"
                              IntegersOnly="True"
                              DecimalPlaces="1"
                              Step="1"
                              Min="1"
                              Max="100"
                              Width="54"
                              SpinButtonsEnabled="False"
                              MouseWheel="NumBox_MouseWheel"/>
            </Border>

            <Label Content="{x:Static p:Resources.Calculator_EndDamageMultiplier}"
                   FontSize="16"
                   Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                   Margin="0,12,0,0"/>
            <Border Background="{DynamicResource ControlFillColorDefaultBrush}"
                    HorizontalAlignment="Left"
                    CornerRadius="4"
                    Padding="0">
                <ui:NumberBox x:Name="EndDamageMulNumBox"
                              ClearButtonEnabled="False"
                              FontSize="16"
                              BorderThickness="0"
                              Value="{Binding ViewModel.EndDamageMult, Mode=OneWayToSource}"
                              IntegersOnly="True"
                              DecimalPlaces="1"
                              Step="1"
                              Min="1"
                              Max="100"
                              Width="54"
                              SpinButtonsEnabled="False"
                              MouseWheel="NumBox_MouseWheel"/>
            </Border>
        </StackPanel>

        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    HorizontalAlignment="Right"
                    Margin="0,0,16,0">
            <Label Content="{x:Static p:Resources.Calculator_BaseArmor}"
                   FontSize="16"
                   Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Border Background="{DynamicResource ControlFillColorDefaultBrush}"
                    HorizontalAlignment="Right"
                    CornerRadius="4"
                    Padding="0">
                <ui:NumberBox x:Name="BaseArmorNumBox"
                              ClearButtonEnabled="False"
                              FontSize="16"
                              BorderThickness="0"
                              Value="{Binding ViewModel.BaseDamageMult, Mode=OneWayToSource}"
                              IntegersOnly="True"
                              DecimalPlaces="1"
                              Step="1"
                              Min="1"
                              Max="100"
                              Width="54"
                              SpinButtonsEnabled="False"
                              MouseWheel="NumBox_MouseWheel"/>
            </Border>
        </StackPanel>

        <StackPanel Grid.Row="1"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Margin="0,0,8,28">
            <ui:Button x:Name="CalculateButton"
                       Content="{x:Static p:Resources.Calculator_Calculate}"
                       HorizontalAlignment="Center"
                       MinWidth="168"
                       Margin="0,0,0,8"
                       Click="CalculateButton_Click"/>
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="ui:TextBox" BasedOn="{StaticResource {x:Type ui:TextBox}}">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="MinWidth" Value="160"/>
                    </Style>
                </StackPanel.Resources>

                <StackPanel>
                    <Grid>
                        <ui:TextBox x:Name="HitTextBox"/>
                        <ui:Button HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Icon="Copy24"
                                   Padding="5"
                                   Margin="0,0,3,2"
                                   Tag="hit"
                                   Click="CopyResultButton_Click"/>
                    </Grid>
                    <Label Content="{x:Static p:Resources.Calculator_Hit}"
                           HorizontalAlignment="Center"/>
                    
                    <Grid>
                        <ui:TextBox x:Name="ArmorTextBox"/>
                        <ui:Button HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Icon="Copy24"
                                   Padding="5"
                                   Margin="0,0,3,2"
                                   Tag="armor"
                                   Click="CopyResultButton_Click"/>
                    </Grid>
                    <Label Content="{x:Static p:Resources.Calculator_Armor}"
                           HorizontalAlignment="Center"/>
                </StackPanel>
                <StackPanel Margin="8,0">
                    <Grid>
                        <ui:TextBox x:Name="DamageTextBox"
                                    Text="{Binding ViewModel.CalculatedDamage}"/>
                        <ui:Button HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Icon="Copy24"
                                   Padding="5"
                                   Margin="0,0,3,2"
                                   Tag="damage"
                                   Click="CopyResultButton_Click"/>
                    </Grid>
                    <Label Content="{x:Static p:Resources.Calculator_Damage}"
                           HorizontalAlignment="Center"/>
                    
                    <Grid>
                        <ui:TextBox x:Name="ParryTextBox"/>
                        <ui:Button HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Icon="Copy24"
                                   Padding="5"
                                   Margin="0,0,3,2"
                                   Tag="parry"
                                   Click="CopyResultButton_Click"/>
                    </Grid>
                    <Label Content="{x:Static p:Resources.Calculator_DodgeParry}"
                           HorizontalAlignment="Center"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <Label Grid.Row="0"
               Grid.Column="2" 
               Content="{x:Static p:Resources.Calculator_Modifiers}"
               Foreground="{DynamicResource TextFillColorPrimaryBrush}"
               FontSize="28"
               FontWeight="SemiBold"
               Margin="18,0,0,0"/>

        <ui:VirtualizingItemsControl Grid.Row="0"
                                     Grid.RowSpan="3"
                                     Grid.Column="2" 
                                     x:Name="CalculatorModifiersControl"
                                     VerticalAlignment="Stretch"
                                     HorizontalAlignment="Stretch"
                                     MaxWidth="470"
                                     Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                     ItemsSource="{Binding ViewModel.CalculatorModifiers, Mode=TwoWay}"
                                     VirtualizingPanel.CacheLengthUnit="Item"
                                     Margin="0,40,0,4">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type models:CalculatorModifierModel}">
                    <ui:CardControl x:Name="CalculatorModifierCard"
                                    Width="220"
                                    Height="56"
                                    Margin="4,4"
                                    Click="CalculatorModifierCard_Click"
                                    HorizontalContentAlignment="Left">
                        <Grid Width="176">
                            <ui:ToggleSwitch x:Name="ToggleActiveSwitch"
                                             IsHitTestVisible="False"
                                             IsChecked="{Binding IsActive, Mode=TwoWay}"
                                             HorizontalAlignment="Right"/>
                            <Viewbox MaxWidth="130"
                                     MaxHeight="24"
                                     HorizontalAlignment="Left"
                                     Margin="-6,0,0,0">
                                <TextBlock Text="{Binding Name}"/>
                            </Viewbox>

                            <ui:SymbolIcon Symbol="Info12"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Bottom"
                                           Padding="0"
                                           Margin="-26,0,0,-16"
                                           ToolTip="{Binding Description}"
                                           ToolTipService.InitialShowDelay="0"/>
                        </Grid>
                    </ui:CardControl>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ui:VirtualizingItemsControl>
    </Grid>
</ui:UiPage>
